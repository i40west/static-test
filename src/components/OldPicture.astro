---
// @ts-nocheck -- the call to AstroPicture throws a type error
// because of densities and widths and I can't figure out how to fix it.
import { Picture as AstroPicture } from 'astro:assets';

import type { ImageMetadata } from 'astro';
import type { ComponentProps } from 'astro/types';

type PictureProps = ComponentProps<typeof AstroPicture>;
export type Props = Omit<PictureProps, 'densities' | 'width' | 'src' | 'alt'> & {
	maxSize?: number;
	densities?: number[] | undefined;
	width?: number | undefined;
	src: ImageMetadata;
	alt?: string | undefined;
};

const useFormat = Astro.isPrerendered ? 'avif' : 'webp';
let { src, formats = [useFormat, 'jpg'], densities = [1,2], widths, width, maxSize, alt='', ...rest } = Astro.props;

if (widths) {
	densities = undefined;
	width = undefined;
}
if (densities) {
	widths = undefined;
}

let height: number | undefined;
if (maxSize) {
	if (src.height > src.width) {
		height = maxSize;
		width = undefined;
	} else {
		width = maxSize;
		height = undefined;
	}
}

---
<AstroPicture
	{...rest}
	{...{
		src,
		alt,
		...(formats && { formats }),
		...(widths && { widths }),
		...(width && { width }),
		...(height && { height }),
		...(densities && { densities }),
	}}
/>
